regcomp() <int regcomp (regex_t *preg, const char *pattern, int cflags) at ./regex/regcomp.c:147>:
    |GOODFLAGS()
    |strlen()
    |malloc()
    |reallocarray()
    |free()
    |memset()
    |EMIT()
    |THERE()
    |p_ere() <void p_ere (struct parse p, int stop) at ./regex/regcomp.c:246> (R):
    |    |HERE()
    |    |MORE()
    |    |PEEK()
    |    |p_ere_exp() <void p_ere_exp (struct parse p) at ./regex/regcomp.c:289> (R):
    |    |    |assert()
    |    |    |MORE()
    |    |    |GETNEXT()
    |    |    |HERE()
    |    |    |REQUIRE()
    |    |    |EMIT()
    |    |    |SEE()
    |    |    |p_ere() <void p_ere (struct parse p, int stop) at ./regex/regcomp.c:246> (recursive: see 10)
    |    |    |SETERROR()
    |    |    |nonnewline() <void nonnewline (struct parse p) at ./regex/regcomp.c:927>:
    |    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (R):
    |    |    |    |    |strncmp()
    |    |    |    |    |EMIT()
    |    |    |    |    |NEXTn()
    |    |    |    |    |allocset() <cset *allocset (struct parse p) at ./regex/regcomp.c:1032>:
    |    |    |    |    |    |assert()
    |    |    |    |    |    |reallocarray()
    |    |    |    |    |    |memset()
    |    |    |    |    |    |free()
    |    |    |    |    |    |SETERROR()
    |    |    |    |    |EAT()
    |    |    |    |    |CHadd()
    |    |    |    |    |MORE()
    |    |    |    |    |PEEK()
    |    |    |    |    |SEETWO()
    |    |    |    |    |p_b_term() <void p_b_term (struct parse p, cset *cs) at ./regex/regcomp.c:695>:
    |    |    |    |    |    |MORE()
    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |MORE2()
    |    |    |    |    |    |PEEK2()
    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |NEXT2()
    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |p_b_cclass() <void p_b_cclass (struct parse p, cset *cs) at ./regex/regcomp.c:758>:
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |MCadd()
    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |p_b_eclass() <void p_b_eclass (struct parse p, cset *cs) at ./regex/regcomp.c:791>:
    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |p_b_symbol() <char p_b_symbol (struct parse p) at ./regex/regcomp.c:803>:
    |    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |    |GETNEXT()
    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |SEE()
    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |EAT()
    |    |    |    |    |    |CHadd()
    |    |    |    |    |REQUIRE()
    |    |    |    |    |GETNEXT()
    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |CHsub()
    |    |    |    |    |CHIN()
    |    |    |    |    |isalpha()
    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |assert()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |isupper()
    |    |    |    |    |    |tolower()
    |    |    |    |    |    |islower()
    |    |    |    |    |    |toupper()
    |    |    |    |    |mccase() <void mccase (struct parse p, cset *cs) at ./regex/regcomp.c:1213>:
    |    |    |    |    |    |assert()
    |    |    |    |    |CHsub()
    |    |    |    |    |mcinvert() <void mcinvert (struct parse p, cset *cs) at ./regex/regcomp.c:1201>:
    |    |    |    |    |    |assert()
    |    |    |    |    |assert()
    |    |    |    |    |nch() <int nch (struct parse p, cset *cs) at ./regex/regcomp.c:1160>:
    |    |    |    |    |    |CHIN()
    |    |    |    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (R):
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |isupper()
    |    |    |    |    |    |    |tolower()
    |    |    |    |    |    |    |islower()
    |    |    |    |    |    |    |toupper()
    |    |    |    |    |    |bothcases() <void bothcases (struct parse p, int ch) at ./regex/regcomp.c:866> (R):
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |    |isupper()
    |    |    |    |    |    |    |    |tolower()
    |    |    |    |    |    |    |    |islower()
    |    |    |    |    |    |    |    |toupper()
    |    |    |    |    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (recursive: see 25)
    |    |    |    |    |    |EMIT()
    |    |    |    |    |firstch() <int firstch (struct parse p, cset *cs) at ./regex/regcomp.c:1144>:
    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |assert()
    |    |    |    |    |freezeset() <int freezeset (struct parse p, cset *cs) at ./regex/regcomp.c:1113>:
    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |    |CHsub()
    |    |    |    |assert()
    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (R):
    |    |    |    |strncmp()
    |    |    |    |EMIT()
    |    |    |    |NEXTn()
    |    |    |    |allocset() <cset *allocset (struct parse p) at ./regex/regcomp.c:1032>:
    |    |    |    |    |assert()
    |    |    |    |    |reallocarray()
    |    |    |    |    |memset()
    |    |    |    |    |free()
    |    |    |    |    |SETERROR()
    |    |    |    |EAT()
    |    |    |    |CHadd()
    |    |    |    |MORE()
    |    |    |    |PEEK()
    |    |    |    |SEETWO()
    |    |    |    |p_b_term() <void p_b_term (struct parse p, cset *cs) at ./regex/regcomp.c:695>:
    |    |    |    |    |MORE()
    |    |    |    |    |PEEK()
    |    |    |    |    |MORE2()
    |    |    |    |    |PEEK2()
    |    |    |    |    |SETERROR()
    |    |    |    |    |NEXT2()
    |    |    |    |    |REQUIRE()
    |    |    |    |    |p_b_cclass() <void p_b_cclass (struct parse p, cset *cs) at ./regex/regcomp.c:758>:
    |    |    |    |    |    |MORE()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |strlen()
    |    |    |    |    |    |MCadd()
    |    |    |    |    |EATTWO()
    |    |    |    |    |p_b_eclass() <void p_b_eclass (struct parse p, cset *cs) at ./regex/regcomp.c:791>:
    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |CHadd()
    |    |    |    |    |p_b_symbol() <char p_b_symbol (struct parse p) at ./regex/regcomp.c:803>:
    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |MORE()
    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |GETNEXT()
    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |strlen()
    |    |    |    |    |SEE()
    |    |    |    |    |NEXT()
    |    |    |    |    |EAT()
    |    |    |    |    |CHadd()
    |    |    |    |REQUIRE()
    |    |    |    |GETNEXT()
    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |CHsub()
    |    |    |    |CHIN()
    |    |    |    |isalpha()
    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |assert()
    |    |    |    |    |isalpha()
    |    |    |    |    |isupper()
    |    |    |    |    |tolower()
    |    |    |    |    |islower()
    |    |    |    |    |toupper()
    |    |    |    |mccase() <void mccase (struct parse p, cset *cs) at ./regex/regcomp.c:1213>:
    |    |    |    |    |assert()
    |    |    |    |CHsub()
    |    |    |    |mcinvert() <void mcinvert (struct parse p, cset *cs) at ./regex/regcomp.c:1201>:
    |    |    |    |    |assert()
    |    |    |    |assert()
    |    |    |    |nch() <int nch (struct parse p, cset *cs) at ./regex/regcomp.c:1160>:
    |    |    |    |    |CHIN()
    |    |    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (R):
    |    |    |    |    |isalpha()
    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |assert()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |isupper()
    |    |    |    |    |    |tolower()
    |    |    |    |    |    |islower()
    |    |    |    |    |    |toupper()
    |    |    |    |    |bothcases() <void bothcases (struct parse p, int ch) at ./regex/regcomp.c:866> (R):
    |    |    |    |    |    |assert()
    |    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |isupper()
    |    |    |    |    |    |    |tolower()
    |    |    |    |    |    |    |islower()
    |    |    |    |    |    |    |toupper()
    |    |    |    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (recursive: see 133)
    |    |    |    |    |EMIT()
    |    |    |    |firstch() <int firstch (struct parse p, cset *cs) at ./regex/regcomp.c:1144>:
    |    |    |    |    |CHIN()
    |    |    |    |    |assert()
    |    |    |    |freezeset() <int freezeset (struct parse p, cset *cs) at ./regex/regcomp.c:1113>:
    |    |    |    |    |CHIN()
    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |CHsub()
    |    |    |backslash() <void backslash (struct parse p, int ch) at ./regex/regcomp.c:906>:
    |    |    |    |EMIT()
    |    |    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (R):
    |    |    |    |    |isalpha()
    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |assert()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |isupper()
    |    |    |    |    |    |tolower()
    |    |    |    |    |    |islower()
    |    |    |    |    |    |toupper()
    |    |    |    |    |bothcases() <void bothcases (struct parse p, int ch) at ./regex/regcomp.c:866> (R):
    |    |    |    |    |    |assert()
    |    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |isupper()
    |    |    |    |    |    |    |tolower()
    |    |    |    |    |    |    |islower()
    |    |    |    |    |    |    |toupper()
    |    |    |    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (R):
    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |EMIT()
    |    |    |    |    |    |    |NEXTn()
    |    |    |    |    |    |    |allocset() <cset *allocset (struct parse p) at ./regex/regcomp.c:1032>:
    |    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |    |reallocarray()
    |    |    |    |    |    |    |    |memset()
    |    |    |    |    |    |    |    |free()
    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |EAT()
    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |p_b_term() <void p_b_term (struct parse p, cset *cs) at ./regex/regcomp.c:695>:
    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |    |    |MORE2()
    |    |    |    |    |    |    |    |PEEK2()
    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |NEXT2()
    |    |    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |    |    |p_b_cclass() <void p_b_cclass (struct parse p, cset *cs) at ./regex/regcomp.c:758>:
    |    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |    |    |MCadd()
    |    |    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |    |    |p_b_eclass() <void p_b_eclass (struct parse p, cset *cs) at ./regex/regcomp.c:791>:
    |    |    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |    |    |p_b_symbol() <char p_b_symbol (struct parse p) at ./regex/regcomp.c:803>:
    |    |    |    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |    |    |    |GETNEXT()
    |    |    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |    |SEE()
    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |EAT()
    |    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |    |GETNEXT()
    |    |    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |    |    |CHsub()
    |    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |    |isupper()
    |    |    |    |    |    |    |    |tolower()
    |    |    |    |    |    |    |    |islower()
    |    |    |    |    |    |    |    |toupper()
    |    |    |    |    |    |    |mccase() <void mccase (struct parse p, cset *cs) at ./regex/regcomp.c:1213>:
    |    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |CHsub()
    |    |    |    |    |    |    |mcinvert() <void mcinvert (struct parse p, cset *cs) at ./regex/regcomp.c:1201>:
    |    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |nch() <int nch (struct parse p, cset *cs) at ./regex/regcomp.c:1160>:
    |    |    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (recursive: see 242)
    |    |    |    |    |    |    |firstch() <int firstch (struct parse p, cset *cs) at ./regex/regcomp.c:1144>:
    |    |    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |freezeset() <int freezeset (struct parse p, cset *cs) at ./regex/regcomp.c:1113>:
    |    |    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |    |    |    |CHsub()
    |    |    |    |    |EMIT()
    |    |    |isdigit()
    |    |    |PEEK()
    |    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (R):
    |    |    |    |isalpha()
    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |assert()
    |    |    |    |    |isalpha()
    |    |    |    |    |isupper()
    |    |    |    |    |tolower()
    |    |    |    |    |islower()
    |    |    |    |    |toupper()
    |    |    |    |bothcases() <void bothcases (struct parse p, int ch) at ./regex/regcomp.c:866> (R):
    |    |    |    |    |assert()
    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |assert()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |isupper()
    |    |    |    |    |    |tolower()
    |    |    |    |    |    |islower()
    |    |    |    |    |    |toupper()
    |    |    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (R):
    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |EMIT()
    |    |    |    |    |    |NEXTn()
    |    |    |    |    |    |allocset() <cset *allocset (struct parse p) at ./regex/regcomp.c:1032>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |reallocarray()
    |    |    |    |    |    |    |memset()
    |    |    |    |    |    |    |free()
    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |EAT()
    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |MORE()
    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |p_b_term() <void p_b_term (struct parse p, cset *cs) at ./regex/regcomp.c:695>:
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |    |MORE2()
    |    |    |    |    |    |    |PEEK2()
    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |NEXT2()
    |    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |    |p_b_cclass() <void p_b_cclass (struct parse p, cset *cs) at ./regex/regcomp.c:758>:
    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |    |MCadd()
    |    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |    |p_b_eclass() <void p_b_eclass (struct parse p, cset *cs) at ./regex/regcomp.c:791>:
    |    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |    |p_b_symbol() <char p_b_symbol (struct parse p) at ./regex/regcomp.c:803>:
    |    |    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |    |    |GETNEXT()
    |    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |SEE()
    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |EAT()
    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |GETNEXT()
    |    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |    |CHsub()
    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |isupper()
    |    |    |    |    |    |    |tolower()
    |    |    |    |    |    |    |islower()
    |    |    |    |    |    |    |toupper()
    |    |    |    |    |    |mccase() <void mccase (struct parse p, cset *cs) at ./regex/regcomp.c:1213>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |CHsub()
    |    |    |    |    |    |mcinvert() <void mcinvert (struct parse p, cset *cs) at ./regex/regcomp.c:1201>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |assert()
    |    |    |    |    |    |nch() <int nch (struct parse p, cset *cs) at ./regex/regcomp.c:1160>:
    |    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (recursive: see 351)
    |    |    |    |    |    |firstch() <int firstch (struct parse p, cset *cs) at ./regex/regcomp.c:1144>:
    |    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |freezeset() <int freezeset (struct parse p, cset *cs) at ./regex/regcomp.c:1113>:
    |    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |    |    |CHsub()
    |    |    |    |EMIT()
    |    |    |MORE2()
    |    |    |PEEK2()
    |    |    |NEXT()
    |    |    |INSERT()
    |    |    |ASTERN()
    |    |    |AHEAD()
    |    |    |THERE()
    |    |    |THERETHERE()
    |    |    |p_count() <int p_count (struct parse p) at ./regex/regcomp.c:595>:
    |    |    |    |MORE()
    |    |    |    |isdigit()
    |    |    |    |PEEK()
    |    |    |    |GETNEXT()
    |    |    |    |REQUIRE()
    |    |    |EAT()
    |    |    |repeat() <void repeat (struct parse p, sopno start, int from, int to) at ./regex/regcomp.c:949> (R):
    |    |    |    |HERE()
    |    |    |    |assert()
    |    |    |    |REP()
    |    |    |    |MAP()
    |    |    |    |DROP()
    |    |    |    |INSERT()
    |    |    |    |repeat() <void repeat (struct parse p, sopno start, int from, int to) at ./regex/regcomp.c:949> (recursive: see 473)
    |    |    |    |ASTERN()
    |    |    |    |AHEAD()
    |    |    |    |EMIT()
    |    |    |    |THERE()
    |    |    |    |THERETHERE()
    |    |    |    |dupl() <sopno dupl (struct parse p, sopno start, sopno finish) at ./regex/regcomp.c:1282>:
    |    |    |    |    |HERE()
    |    |    |    |    |assert()
    |    |    |    |    |enlarge() <int enlarge (struct parse p, sopno size) at ./regex/regcomp.c:1378>:
    |    |    |    |    |    |reallocarray()
    |    |    |    |    |    |SETERROR()
    |    |    |    |    |memcpy()
    |    |    |    |SETERROR()
    |    |REQUIRE()
    |    |EAT()
    |    |INSERT()
    |    |ASTERN()
    |    |THERE()
    |    |AHEAD()
    |    |EMIT()
    |    |assert()
    |    |SEE()
    |p_str() <void p_str (struct parse p) at ./regex/regcomp.c:424>:
    |    |REQUIRE()
    |    |MORE()
    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (R):
    |    |    |isalpha()
    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |assert()
    |    |    |    |isalpha()
    |    |    |    |isupper()
    |    |    |    |tolower()
    |    |    |    |islower()
    |    |    |    |toupper()
    |    |    |bothcases() <void bothcases (struct parse p, int ch) at ./regex/regcomp.c:866> (R):
    |    |    |    |assert()
    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |assert()
    |    |    |    |    |isalpha()
    |    |    |    |    |isupper()
    |    |    |    |    |tolower()
    |    |    |    |    |islower()
    |    |    |    |    |toupper()
    |    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (R):
    |    |    |    |    |strncmp()
    |    |    |    |    |EMIT()
    |    |    |    |    |NEXTn()
    |    |    |    |    |allocset() <cset *allocset (struct parse p) at ./regex/regcomp.c:1032>:
    |    |    |    |    |    |assert()
    |    |    |    |    |    |reallocarray()
    |    |    |    |    |    |memset()
    |    |    |    |    |    |free()
    |    |    |    |    |    |SETERROR()
    |    |    |    |    |EAT()
    |    |    |    |    |CHadd()
    |    |    |    |    |MORE()
    |    |    |    |    |PEEK()
    |    |    |    |    |SEETWO()
    |    |    |    |    |p_b_term() <void p_b_term (struct parse p, cset *cs) at ./regex/regcomp.c:695>:
    |    |    |    |    |    |MORE()
    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |MORE2()
    |    |    |    |    |    |PEEK2()
    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |NEXT2()
    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |p_b_cclass() <void p_b_cclass (struct parse p, cset *cs) at ./regex/regcomp.c:758>:
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |MCadd()
    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |p_b_eclass() <void p_b_eclass (struct parse p, cset *cs) at ./regex/regcomp.c:791>:
    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |p_b_symbol() <char p_b_symbol (struct parse p) at ./regex/regcomp.c:803>:
    |    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |    |GETNEXT()
    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |SEE()
    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |EAT()
    |    |    |    |    |    |CHadd()
    |    |    |    |    |REQUIRE()
    |    |    |    |    |GETNEXT()
    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |CHsub()
    |    |    |    |    |CHIN()
    |    |    |    |    |isalpha()
    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |assert()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |isupper()
    |    |    |    |    |    |tolower()
    |    |    |    |    |    |islower()
    |    |    |    |    |    |toupper()
    |    |    |    |    |mccase() <void mccase (struct parse p, cset *cs) at ./regex/regcomp.c:1213>:
    |    |    |    |    |    |assert()
    |    |    |    |    |CHsub()
    |    |    |    |    |mcinvert() <void mcinvert (struct parse p, cset *cs) at ./regex/regcomp.c:1201>:
    |    |    |    |    |    |assert()
    |    |    |    |    |assert()
    |    |    |    |    |nch() <int nch (struct parse p, cset *cs) at ./regex/regcomp.c:1160>:
    |    |    |    |    |    |CHIN()
    |    |    |    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (recursive: see 506)
    |    |    |    |    |firstch() <int firstch (struct parse p, cset *cs) at ./regex/regcomp.c:1144>:
    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |assert()
    |    |    |    |    |freezeset() <int freezeset (struct parse p, cset *cs) at ./regex/regcomp.c:1113>:
    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |    |CHsub()
    |    |    |EMIT()
    |    |GETNEXT()
    |p_bre() <void p_bre (struct parse p, int end1, int end2) at ./regex/regcomp.c:442> (R):
    |    |HERE()
    |    |EAT()
    |    |EMIT()
    |    |MORE()
    |    |SEETWO()
    |    |p_simp_re() <int p_simp_re (struct parse p, int starordinary) at ./regex/regcomp.c:473> (R):
    |    |    |HERE()
    |    |    |assert()
    |    |    |MORE()
    |    |    |GETNEXT()
    |    |    |REQUIRE()
    |    |    |nonnewline() <void nonnewline (struct parse p) at ./regex/regcomp.c:927>:
    |    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (R):
    |    |    |    |    |strncmp()
    |    |    |    |    |EMIT()
    |    |    |    |    |NEXTn()
    |    |    |    |    |allocset() <cset *allocset (struct parse p) at ./regex/regcomp.c:1032>:
    |    |    |    |    |    |assert()
    |    |    |    |    |    |reallocarray()
    |    |    |    |    |    |memset()
    |    |    |    |    |    |free()
    |    |    |    |    |    |SETERROR()
    |    |    |    |    |EAT()
    |    |    |    |    |CHadd()
    |    |    |    |    |MORE()
    |    |    |    |    |PEEK()
    |    |    |    |    |SEETWO()
    |    |    |    |    |p_b_term() <void p_b_term (struct parse p, cset *cs) at ./regex/regcomp.c:695>:
    |    |    |    |    |    |MORE()
    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |MORE2()
    |    |    |    |    |    |PEEK2()
    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |NEXT2()
    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |p_b_cclass() <void p_b_cclass (struct parse p, cset *cs) at ./regex/regcomp.c:758>:
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |MCadd()
    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |p_b_eclass() <void p_b_eclass (struct parse p, cset *cs) at ./regex/regcomp.c:791>:
    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |p_b_symbol() <char p_b_symbol (struct parse p) at ./regex/regcomp.c:803>:
    |    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |    |GETNEXT()
    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |SEE()
    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |EAT()
    |    |    |    |    |    |CHadd()
    |    |    |    |    |REQUIRE()
    |    |    |    |    |GETNEXT()
    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |CHsub()
    |    |    |    |    |CHIN()
    |    |    |    |    |isalpha()
    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |assert()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |isupper()
    |    |    |    |    |    |tolower()
    |    |    |    |    |    |islower()
    |    |    |    |    |    |toupper()
    |    |    |    |    |mccase() <void mccase (struct parse p, cset *cs) at ./regex/regcomp.c:1213>:
    |    |    |    |    |    |assert()
    |    |    |    |    |CHsub()
    |    |    |    |    |mcinvert() <void mcinvert (struct parse p, cset *cs) at ./regex/regcomp.c:1201>:
    |    |    |    |    |    |assert()
    |    |    |    |    |assert()
    |    |    |    |    |nch() <int nch (struct parse p, cset *cs) at ./regex/regcomp.c:1160>:
    |    |    |    |    |    |CHIN()
    |    |    |    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (R):
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |isupper()
    |    |    |    |    |    |    |tolower()
    |    |    |    |    |    |    |islower()
    |    |    |    |    |    |    |toupper()
    |    |    |    |    |    |bothcases() <void bothcases (struct parse p, int ch) at ./regex/regcomp.c:866> (R):
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |    |isupper()
    |    |    |    |    |    |    |    |tolower()
    |    |    |    |    |    |    |    |islower()
    |    |    |    |    |    |    |    |toupper()
    |    |    |    |    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (recursive: see 627)
    |    |    |    |    |    |EMIT()
    |    |    |    |    |firstch() <int firstch (struct parse p, cset *cs) at ./regex/regcomp.c:1144>:
    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |assert()
    |    |    |    |    |freezeset() <int freezeset (struct parse p, cset *cs) at ./regex/regcomp.c:1113>:
    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |    |CHsub()
    |    |    |    |assert()
    |    |    |EMIT()
    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (R):
    |    |    |    |strncmp()
    |    |    |    |EMIT()
    |    |    |    |NEXTn()
    |    |    |    |allocset() <cset *allocset (struct parse p) at ./regex/regcomp.c:1032>:
    |    |    |    |    |assert()
    |    |    |    |    |reallocarray()
    |    |    |    |    |memset()
    |    |    |    |    |free()
    |    |    |    |    |SETERROR()
    |    |    |    |EAT()
    |    |    |    |CHadd()
    |    |    |    |MORE()
    |    |    |    |PEEK()
    |    |    |    |SEETWO()
    |    |    |    |p_b_term() <void p_b_term (struct parse p, cset *cs) at ./regex/regcomp.c:695>:
    |    |    |    |    |MORE()
    |    |    |    |    |PEEK()
    |    |    |    |    |MORE2()
    |    |    |    |    |PEEK2()
    |    |    |    |    |SETERROR()
    |    |    |    |    |NEXT2()
    |    |    |    |    |REQUIRE()
    |    |    |    |    |p_b_cclass() <void p_b_cclass (struct parse p, cset *cs) at ./regex/regcomp.c:758>:
    |    |    |    |    |    |MORE()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |strlen()
    |    |    |    |    |    |MCadd()
    |    |    |    |    |EATTWO()
    |    |    |    |    |p_b_eclass() <void p_b_eclass (struct parse p, cset *cs) at ./regex/regcomp.c:791>:
    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |CHadd()
    |    |    |    |    |p_b_symbol() <char p_b_symbol (struct parse p) at ./regex/regcomp.c:803>:
    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |MORE()
    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |GETNEXT()
    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |strlen()
    |    |    |    |    |SEE()
    |    |    |    |    |NEXT()
    |    |    |    |    |EAT()
    |    |    |    |    |CHadd()
    |    |    |    |REQUIRE()
    |    |    |    |GETNEXT()
    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |CHsub()
    |    |    |    |CHIN()
    |    |    |    |isalpha()
    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |assert()
    |    |    |    |    |isalpha()
    |    |    |    |    |isupper()
    |    |    |    |    |tolower()
    |    |    |    |    |islower()
    |    |    |    |    |toupper()
    |    |    |    |mccase() <void mccase (struct parse p, cset *cs) at ./regex/regcomp.c:1213>:
    |    |    |    |    |assert()
    |    |    |    |CHsub()
    |    |    |    |mcinvert() <void mcinvert (struct parse p, cset *cs) at ./regex/regcomp.c:1201>:
    |    |    |    |    |assert()
    |    |    |    |assert()
    |    |    |    |nch() <int nch (struct parse p, cset *cs) at ./regex/regcomp.c:1160>:
    |    |    |    |    |CHIN()
    |    |    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (R):
    |    |    |    |    |isalpha()
    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |assert()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |isupper()
    |    |    |    |    |    |tolower()
    |    |    |    |    |    |islower()
    |    |    |    |    |    |toupper()
    |    |    |    |    |bothcases() <void bothcases (struct parse p, int ch) at ./regex/regcomp.c:866> (R):
    |    |    |    |    |    |assert()
    |    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |isupper()
    |    |    |    |    |    |    |tolower()
    |    |    |    |    |    |    |islower()
    |    |    |    |    |    |    |toupper()
    |    |    |    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (recursive: see 736)
    |    |    |    |    |EMIT()
    |    |    |    |firstch() <int firstch (struct parse p, cset *cs) at ./regex/regcomp.c:1144>:
    |    |    |    |    |CHIN()
    |    |    |    |    |assert()
    |    |    |    |freezeset() <int freezeset (struct parse p, cset *cs) at ./regex/regcomp.c:1113>:
    |    |    |    |    |CHIN()
    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |CHsub()
    |    |    |SETERROR()
    |    |    |SEETWO()
    |    |    |p_bre() <void p_bre (struct parse p, int end1, int end2) at ./regex/regcomp.c:442> (recursive: see 614)
    |    |    |EATTWO()
    |    |    |OP()
    |    |    |dupl() <sopno dupl (struct parse p, sopno start, sopno finish) at ./regex/regcomp.c:1282>:
    |    |    |    |HERE()
    |    |    |    |assert()
    |    |    |    |enlarge() <int enlarge (struct parse p, sopno size) at ./regex/regcomp.c:1378>:
    |    |    |    |    |reallocarray()
    |    |    |    |    |SETERROR()
    |    |    |    |memcpy()
    |    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (R):
    |    |    |    |isalpha()
    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |assert()
    |    |    |    |    |isalpha()
    |    |    |    |    |isupper()
    |    |    |    |    |tolower()
    |    |    |    |    |islower()
    |    |    |    |    |toupper()
    |    |    |    |bothcases() <void bothcases (struct parse p, int ch) at ./regex/regcomp.c:866> (R):
    |    |    |    |    |assert()
    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |assert()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |isupper()
    |    |    |    |    |    |tolower()
    |    |    |    |    |    |islower()
    |    |    |    |    |    |toupper()
    |    |    |    |    |p_bracket() <void p_bracket (struct parse p) at ./regex/regcomp.c:616> (R):
    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |EMIT()
    |    |    |    |    |    |NEXTn()
    |    |    |    |    |    |allocset() <cset *allocset (struct parse p) at ./regex/regcomp.c:1032>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |reallocarray()
    |    |    |    |    |    |    |memset()
    |    |    |    |    |    |    |free()
    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |EAT()
    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |MORE()
    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |p_b_term() <void p_b_term (struct parse p, cset *cs) at ./regex/regcomp.c:695>:
    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |    |MORE2()
    |    |    |    |    |    |    |PEEK2()
    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |NEXT2()
    |    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |    |p_b_cclass() <void p_b_cclass (struct parse p, cset *cs) at ./regex/regcomp.c:758>:
    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |    |PEEK()
    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |    |MCadd()
    |    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |    |p_b_eclass() <void p_b_eclass (struct parse p, cset *cs) at ./regex/regcomp.c:791>:
    |    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |    |p_b_symbol() <char p_b_symbol (struct parse p) at ./regex/regcomp.c:803>:
    |    |    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |EATTWO()
    |    |    |    |    |    |    |    |GETNEXT()
    |    |    |    |    |    |    |    |p_b_coll_elem() <char p_b_coll_elem (struct parse p, int endc) at ./regex/regcomp.c:821>:
    |    |    |    |    |    |    |    |    |MORE()
    |    |    |    |    |    |    |    |    |SEETWO()
    |    |    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |    |    |SETERROR()
    |    |    |    |    |    |    |    |    |strncmp()
    |    |    |    |    |    |    |    |    |strlen()
    |    |    |    |    |    |    |SEE()
    |    |    |    |    |    |    |NEXT()
    |    |    |    |    |    |    |EAT()
    |    |    |    |    |    |    |CHadd()
    |    |    |    |    |    |REQUIRE()
    |    |    |    |    |    |GETNEXT()
    |    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |    |CHsub()
    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |othercase() <char othercase (int ch) at ./regex/regcomp.c:848>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |    |isalpha()
    |    |    |    |    |    |    |isupper()
    |    |    |    |    |    |    |tolower()
    |    |    |    |    |    |    |islower()
    |    |    |    |    |    |    |toupper()
    |    |    |    |    |    |mccase() <void mccase (struct parse p, cset *cs) at ./regex/regcomp.c:1213>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |CHsub()
    |    |    |    |    |    |mcinvert() <void mcinvert (struct parse p, cset *cs) at ./regex/regcomp.c:1201>:
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |assert()
    |    |    |    |    |    |nch() <int nch (struct parse p, cset *cs) at ./regex/regcomp.c:1160>:
    |    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |ordinary() <void ordinary (struct parse p, int ch) at ./regex/regcomp.c:889> (recursive: see 855)
    |    |    |    |    |    |firstch() <int firstch (struct parse p, cset *cs) at ./regex/regcomp.c:1144>:
    |    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |    |assert()
    |    |    |    |    |    |freezeset() <int freezeset (struct parse p, cset *cs) at ./regex/regcomp.c:1113>:
    |    |    |    |    |    |    |CHIN()
    |    |    |    |    |    |    |freeset() <void freeset (struct parse p, cset *cs) at ./regex/regcomp.c:1091>:
    |    |    |    |    |    |    |    |CHsub()
    |    |    |    |EMIT()
    |    |    |EAT()
    |    |    |INSERT()
    |    |    |ASTERN()
    |    |    |p_count() <int p_count (struct parse p) at ./regex/regcomp.c:595>:
    |    |    |    |MORE()
    |    |    |    |isdigit()
    |    |    |    |PEEK()
    |    |    |    |GETNEXT()
    |    |    |    |REQUIRE()
    |    |    |isdigit()
    |    |    |PEEK()
    |    |    |repeat() <void repeat (struct parse p, sopno start, int from, int to) at ./regex/regcomp.c:949> (R):
    |    |    |    |HERE()
    |    |    |    |assert()
    |    |    |    |REP()
    |    |    |    |MAP()
    |    |    |    |DROP()
    |    |    |    |INSERT()
    |    |    |    |repeat() <void repeat (struct parse p, sopno start, int from, int to) at ./regex/regcomp.c:949> (recursive: see 973)
    |    |    |    |ASTERN()
    |    |    |    |AHEAD()
    |    |    |    |EMIT()
    |    |    |    |THERE()
    |    |    |    |THERETHERE()
    |    |    |    |dupl() <sopno dupl (struct parse p, sopno start, sopno finish) at ./regex/regcomp.c:1282>:
    |    |    |    |    |HERE()
    |    |    |    |    |assert()
    |    |    |    |    |enlarge() <int enlarge (struct parse p, sopno size) at ./regex/regcomp.c:1378>:
    |    |    |    |    |    |reallocarray()
    |    |    |    |    |    |SETERROR()
    |    |    |    |    |memcpy()
    |    |    |    |SETERROR()
    |    |    |NEXT()
    |    |DROP()
    |    |REQUIRE()
    |categorize() <void categorize (struct parse p, struct re_guts g) at ./regex/regcomp.c:1257>:
    |    |isinsets() <int isinsets (struct re_guts g, int c) at ./regex/regcomp.c:1222>:
    |    |samesets() <int samesets (struct re_guts g, int c1, int c2) at ./regex/regcomp.c:1239>:
    |stripsnug() <void stripsnug (struct parse p, struct re_guts g) at ./regex/regcomp.c:1399>:
    |    |reallocarray()
    |    |SETERROR()
    |findmust() <void findmust (struct parse p, struct re_guts g) at ./regex/regcomp.c:1419>:
    |    |OP()
    |    |OPND()
    |    |malloc()
    |    |assert()
    |pluscount() <sopno pluscount (struct parse p, struct re_guts g) at ./regex/regcomp.c:1497>:
    |    |OP()
    |SETERROR()
    |regfree() <void regfree (regex_t *preg) at ./regex/regfree.c:50>:
    |    |free()
regerror() <size_t regerror (int errcode, const regex_t *preg, char *errbuf, size_t errbuf_size) at ./regex/regerror.c:78>:
    |regatoi() <char *regatoi (const regex_t *preg, char *localbuf, int localbufsize) at ./regex/regerror.c:117>:
    |    |strcmp()
    |    |snprintf()
    |assert()
    |strlen()
    |strlcpy()
    |snprintf()
regexec() <int regexec (const regex_t *preg, const char *string, size_t nmatch, regmatch_t pmatch[], int eflags) at ./regex/regexec.c:140>:
    |assert()
    |GOODFLAGS()
    |smatcher()
    |lmatcher()
regfree() <void regfree (regex_t *preg) at ./regex/regfree.c:50>:
    |free()
