{"clock_getres",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"clock_gettime",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"close",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"closefrom",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"dup",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"dup2",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"dup3",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"fchdir",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"fcntl",std::bitset<COUNT>.set(PLEDGE_FLOCK)|std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"fstat",std::bitset<COUNT>.set(PLEDGE_TMPPATH)|std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_STDIO)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"fsync",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"ftruncate",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getdents",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getdtablecount",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getegid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getentropy",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"geteuid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getgid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getgroups",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getitimer",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getlogin",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getpgid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getpgrp",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getpid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getppid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getresgid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getresuid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getrlimit",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getrtable",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getsid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getthrid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"gettimeofday",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"getuid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"issetugid",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"kevent",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"kqueue",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"lseek",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"madvise",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"minherit",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"mmap",std::bitset<COUNT>.set(PLEDGE_PROT_EXEC)|std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"mprotect",std::bitset<COUNT>.set(PLEDGE_PROT_EXEC)|std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"mquery",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"munmap",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"nanosleep",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"pipe",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"pipe2",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"poll",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"pread",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"preadv",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"pwrite",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"pwritev",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"read",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"readv",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"recvfrom",std::bitset<COUNT>.set(PLEDGE_DNS)|std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"recvmsg",std::bitset<COUNT>.set(PLEDGE_STDIO)|std::bitset<COUNT>.set(PLEDGE_RECVFD)},
{"select",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"sendmsg",std::bitset<COUNT>.set(PLEDGE_SENDFD)|std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"sendsyslog",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"sendto",std::bitset<COUNT>.set(PLEDGE_DNS)|std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"setitimer",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"shutdown",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"sigaction",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"sigprocmask",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"sigreturn",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"socketpair",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"umask",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"wait4",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"write",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"writev",std::bitset<COUNT>.set(PLEDGE_STDIO)},
{"chdir",std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"getcwd",std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"openat",std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"fstatat",std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"faccessat",std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"readlinkat",std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"lstat",std::bitset<COUNT>.set(PLEDGE_TMPPATH)|std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"chmod",std::bitset<COUNT>.set(PLEDGE_TMPPATH)|std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_FATTR)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"fchmod",std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_FATTR)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"fchmodat",std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_FATTR)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"chflags",std::bitset<COUNT>.set(PLEDGE_TMPPATH)|std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_FATTR)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"chflagsat",std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_FATTR)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"chown",std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_TMPPATH)|std::bitset<COUNT>.set(PLEDGE_CHOWN)|std::bitset<COUNT>.set(PLEDGE_FATTR)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"fchown",std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_FATTR)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"fchownat",std::bitset<COUNT>.set(PLEDGE_WPATH)|std::bitset<COUNT>.set(PLEDGE_FATTR)|std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"getfsstat",std::bitset<COUNT>.set(PLEDGE_RPATH)},
{"rename",std::bitset<COUNT>.set(PLEDGE_CPATH)},
{"renameat",std::bitset<COUNT>.set(PLEDGE_CPATH)},
{"link",std::bitset<COUNT>.set(PLEDGE_CPATH)},
{"linkat",std::bitset<COUNT>.set(PLEDGE_CPATH)},
{"symlink",std::bitset<COUNT>.set(PLEDGE_CPATH)},
{"symlinkat",std::bitset<COUNT>.set(PLEDGE_CPATH)},
{"unlink",std::bitset<COUNT>.set(PLEDGE_TMPPATH)|std::bitset<COUNT>.set(PLEDGE_CPATH)},
{"unlinkat",std::bitset<COUNT>.set(PLEDGE_CPATH)},
{"mkdir",std::bitset<COUNT>.set(PLEDGE_CPATH)},
{"mkdirat",std::bitset<COUNT>.set(PLEDGE_CPATH)},
{"rmdir",std::bitset<COUNT>.set(PLEDGE_CPATH)},
{"mkfifo",std::bitset<COUNT>.set(PLEDGE_DPATH)},
{"mknod",std::bitset<COUNT>.set(PLEDGE_DPATH)},
{"socket",std::bitset<COUNT>.set(PLEDGE_UNIX)|std::bitset<COUNT>.set(PLEDGE_INET)|std::bitset<COUNT>.set(PLEDGE_DNS)},
{"listen",std::bitset<COUNT>.set(PLEDGE_UNIX)|std::bitset<COUNT>.set(PLEDGE_INET)},
{"bind",std::bitset<COUNT>.set(PLEDGE_UNIX)|std::bitset<COUNT>.set(PLEDGE_INET)},
{"connect",std::bitset<COUNT>.set(PLEDGE_UNIX)|std::bitset<COUNT>.set(PLEDGE_INET)|std::bitset<COUNT>.set(PLEDGE_DNS)},
{"accept4",std::bitset<COUNT>.set(PLEDGE_UNIX)|std::bitset<COUNT>.set(PLEDGE_INET)},
{"accept",std::bitset<COUNT>.set(PLEDGE_UNIX)|std::bitset<COUNT>.set(PLEDGE_INET)},
{"getpeername",std::bitset<COUNT>.set(PLEDGE_UNIX)|std::bitset<COUNT>.set(PLEDGE_INET)},
{"getsockname",std::bitset<COUNT>.set(PLEDGE_UNIX)|std::bitset<COUNT>.set(PLEDGE_INET)},
{"setsockopt",std::bitset<COUNT>.set(PLEDGE_UNIX)|std::bitset<COUNT>.set(PLEDGE_INET)|std::bitset<COUNT>.set(PLEDGE_MCAST)},
{"getsockopt",std::bitset<COUNT>.set(PLEDGE_UNIX)|std::bitset<COUNT>.set(PLEDGE_INET)},
{"utimes",std::bitset<COUNT>.set(PLEDGE_FATTR)},
{"futimes",std::bitset<COUNT>.set(PLEDGE_FATTR)},
{"utimensat",std::bitset<COUNT>.set(PLEDGE_FATTR)},
{"futimens",std::bitset<COUNT>.set(PLEDGE_FATTR)},
{"lchown",std::bitset<COUNT>.set(PLEDGE_FATTR)},
{"flock",std::bitset<COUNT>.set(PLEDGE_FLOCK)},
{"lockf",std::bitset<COUNT>.set(PLEDGE_FLOCK)},
{"open",std::bitset<COUNT>.set(PLEDGE_FLOCK)},
{"getpwnam",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"getpwuid",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"getpwnam_r",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"getpwuid_r",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"getpwnam_shadow",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"getpwuid_shadow",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"setpassent",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"getgrent",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"getgrnam",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"getgrnam_r",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"getgrgid",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"getgrgid_r",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"setgroupent",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"setgrent",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"endgrent",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"getgrouplist",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"initgroups",std::bitset<COUNT>.set(PLEDGE_GETPW)},
{"MTIOCG",std::bitset<COUNT>.set(PLEDGE_TAPE)},
{"MTIOCT",std::bitset<COUNT>.set(PLEDGE_TAPE)},
{"ioctl",std::bitset<COUNT>.set(PLEDGE_AUDIO)|std::bitset<COUNT>.set(PLEDGE_TTY)|std::bitset<COUNT>.set(PLEDGE_PF)},
{"fork",std::bitset<COUNT>.set(PLEDGE_PROC)},
{"vfork",std::bitset<COUNT>.set(PLEDGE_PROC)},
{"kill",std::bitset<COUNT>.set(PLEDGE_PROC)},
{"getpriority",std::bitset<COUNT>.set(PLEDGE_ID)|std::bitset<COUNT>.set(PLEDGE_PROC)},
{"setpriority",std::bitset<COUNT>.set(PLEDGE_ID)|std::bitset<COUNT>.set(PLEDGE_PROC)},
{"setrlimit",std::bitset<COUNT>.set(PLEDGE_ID)|std::bitset<COUNT>.set(PLEDGE_PROC)},
{"setpgid",std::bitset<COUNT>.set(PLEDGE_PROC)},
{"setsid",std::bitset<COUNT>.set(PLEDGE_PROC)},
{"execve",std::bitset<COUNT>.set(PLEDGE_EXEC)},
{"settimeofday",std::bitset<COUNT>.set(PLEDGE_SETTIME)},
{"adjtime",std::bitset<COUNT>.set(PLEDGE_SETTIME)},
{"adjfreq",std::bitset<COUNT>.set(PLEDGE_SETTIME)},
{"sysctl",std::bitset<COUNT>.set(PLEDGE_VMINFO)|std::bitset<COUNT>.set(PLEDGE_PS)},
{"setuid",std::bitset<COUNT>.set(PLEDGE_ID)},
{"seteuid",std::bitset<COUNT>.set(PLEDGE_ID)},
{"setreuid",std::bitset<COUNT>.set(PLEDGE_ID)},
{"setresuid",std::bitset<COUNT>.set(PLEDGE_ID)},
{"setgid",std::bitset<COUNT>.set(PLEDGE_ID)},
{"setegid",std::bitset<COUNT>.set(PLEDGE_ID)},
{"setregid",std::bitset<COUNT>.set(PLEDGE_ID)},
{"setresgid",std::bitset<COUNT>.set(PLEDGE_ID)},
{"setgroups",std::bitset<COUNT>.set(PLEDGE_ID)},
{"setlogin",std::bitset<COUNT>.set(PLEDGE_ID)},
{"pf",std::bitset<COUNT>.set(PLEDGE_PF)},
{"bpf",std::bitset<COUNT>.set(PLEDGE_BPF)}
