net/rcmd.c:137:		fcntl(s, F_SETOWN, pid);
gen/popen.c:103:			int flags = fcntl(pdes[target], F_GETFD);
gen/popen.c:105:			    fcntl(pdes[target], F_SETFD, flags & ~FD_CLOEXEC)
gen/popen.c:133:		int flags = fcntl(pdes[target], F_GETFD);
gen/popen.c:135:			fcntl(pdes[target], F_SETFD, flags & ~FD_CLOEXEC);
gen/posix_spawn.c:161:			int flags = fcntl(fd, F_GETFD);
gen/posix_spawn.c:165:			    fcntl(fd, F_SETFD, flags & ~FD_CLOEXEC) == -1))
sys/w_fcntl.c:23:fcntl(int fd, int cmd, ...)
yp/yp_bind.c:240:	if (fcntl(ysd->dom_socket, F_SETFD, FD_CLOEXEC) == -1)

===lockf.c==
gen/lockf.c:62:		if (fcntl(filedes, F_GETLK, &fl) == -1)
gen/lockf.c:75:	return (fcntl(filedes, cmd, &fl));

stdio/fdopen.c:58:	if ((fdflags = fcntl(fd, F_GETFL)) < 0)
stdio/fdopen.c:81:	if ((oflags & O_CLOEXEC) && !((tmp = fcntl(fd, F_GETFD)) & FD_CLOEXEC)) 
stdio/fdopen.c:82:		fcntl(fd, F_SETFD, tmp | FD_CLOEXEC);
gen/isatty.c:37:	return fcntl(fd, F_ISATTY) != -1;
gen/opendir.c:71:	if ((flags = fcntl(fd, F_GETFL)) == -1)
gen/opendir.c:86:		(void)fcntl(fd, F_SETFD, FD_CLOEXEC);
